// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  // NOTE: When using postgresql, mysql or sqlserver, uncomment the @db.Text annotations in model Account below
  // Further reading:
  // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
  // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
  url      = env("DATABASE_URL")
}

model User {
  id         String     @id @default(uuid())
  username   String     @unique
  password   String
  role       Role       @default(User)
  created_at DateTime   @default(now())
  questions  Question[]
  exams      Exam[]
}

enum Role {
  Admin
  User
}

model Exam {
  id          String @id @default(uuid())
  title       String
  description String

  questions Question[]

  user    User   @relation(fields: [user_id], references: [id])
  user_id String

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Question {
  id      String @id @default(uuid())
  user    User   @relation(fields: [user_id], references: [id])
  user_id String

  content String
  answers Answer[]
  exams   Exam[]

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Answer {
  id          String   @id @default(uuid())
  question    Question @relation(fields: [question_id], references: [id], onDelete: Cascade)
  question_id String   @map("questionId")

  content String
  status  Boolean

  created_at DateTime @default(now())
}
